// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/call/[appointmentId]" | "/doctor-list" | "/doctor-list/call/[appointmentId]" | "/doctor-list/doctor/appointments" | "/doctor-list/doctor/dashboard" | "/doctor-list/doctor/profile" | "/doctor-list/patient/dashboard" | "/doctor-list/patient/profile" | "/doctor/appointments" | "/doctor/dashboard" | "/doctor/profile" | "/login/doctor" | "/login/patien" | "/onboarding/doctor" | "/onboarding/doctor-list" | "/onboarding/doctor-list/call/[appointmentId]" | "/onboarding/doctor-list/doctor/appointments" | "/onboarding/doctor-list/doctor/dashboard" | "/onboarding/doctor-list/doctor/profile" | "/onboarding/doctor-list/patient/dashboard" | "/onboarding/doctor-list/patient/profile" | "/onboarding/patient" | "/patient/booking/[doctorId]" | "/patient/dashboard" | "/patient/profile" | "/signup/doctor" | "/signup/patient"
type PageRoutes = never
type LayoutRoutes = "/" | "/onboarding"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/call/[appointmentId]": { "appointmentId": string; }
  "/doctor-list": {}
  "/doctor-list/call/[appointmentId]": { "appointmentId": string; }
  "/doctor-list/doctor/appointments": {}
  "/doctor-list/doctor/dashboard": {}
  "/doctor-list/doctor/profile": {}
  "/doctor-list/patient/dashboard": {}
  "/doctor-list/patient/profile": {}
  "/doctor/appointments": {}
  "/doctor/dashboard": {}
  "/doctor/profile": {}
  "/login/doctor": {}
  "/login/patien": {}
  "/onboarding": {}
  "/onboarding/doctor": {}
  "/onboarding/doctor-list": {}
  "/onboarding/doctor-list/call/[appointmentId]": { "appointmentId": string; }
  "/onboarding/doctor-list/doctor/appointments": {}
  "/onboarding/doctor-list/doctor/dashboard": {}
  "/onboarding/doctor-list/doctor/profile": {}
  "/onboarding/doctor-list/patient/dashboard": {}
  "/onboarding/doctor-list/patient/profile": {}
  "/onboarding/patient": {}
  "/patient/booking/[doctorId]": { "doctorId": string; }
  "/patient/dashboard": {}
  "/patient/profile": {}
  "/signup/doctor": {}
  "/signup/patient": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/onboarding": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
